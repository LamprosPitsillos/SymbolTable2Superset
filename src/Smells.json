{
    "Smells": [
        {
            "name": "Too many parameters",
            "description": "Detects methods with an excessive amount of parameters",
            "rules": {
                "max_argc": {
                    "formal_name": "Maximum method arguments",
                    "type": "range",
                    "value": [
                        5,
                        10
                    ],
                    "valid": [
                        2,
                        15
                    ]
                }
            }
        },
        {
            "name": "Too many function literals",
            "description": "Detects excessive method literal count",
            "rules": {
                "max_literals": {
                    "formal_name": "Maximum method literals",
                    "type": "range",
                    "value": [
                        12,
                        30
                    ],
                    "valid": [
                        1,
                        50
                    ]
                }
            }
        },
        {
            "name": "Too many locals",
            "description": "Detects excessive method local variable declarations",
            "rules": {
                "max_locals": {
                    "formal_name": "Maximum method locals",
                    "type": "range",
                    "value": [
                        10,
                        24
                    ],
                    "valid": [
                        1,
                        30
                    ]
                }
            }
        },
        {
            "name": "Long function",
            "description": "Detects methods with too many statemets or too many lines",
            "rules": {
                "max_statements": {
                    "formal_name": "Maximum method statement count",
                    "type": "range",
                    "value": [
                        60,
                        100
                    ],
                    "valid": [
                        20,
                        200
                    ]
                },
                "max_lines": {
                    "formal_name": "Maximum Method line count",
                    "type": "range",
                    "value": [
                        70,
                        120
                    ],
                    "valid": [
                        5,
                        200
                    ]
                }
            }
        },
        {
            "name": "Cyclomatic complexity",
            "description": "Detects methods with excessive branches (if, switch, while, for, conintue, break, return)",
            "rules": {
                "max_loops": {
                    "formal_name": "Maximum method loops",
                    "type": "range",
                    "value": [
                        6,
                        12
                    ],
                    "valid": [
                        1,
                        30
                    ]
                },
                "max_branches": {
                    "formal_name": "Maximum method branching statements",
                    "type": "range",
                    "value": [
                        14,
                        20
                    ],
                    "valid": [
                        1,
                        60
                    ]
                }
            }
        },
        {
            "name": "Excessively long identifier",
            "description": "Detects identifiers with too many characters",
            "rules": {
                "max_id_len": {
                    "formal_name": "Maximum length of an identifier",
                    "type": "range",
                    "value": [
                        25,
                        45
                    ],
                    "valid": [
                        5,
                        100
                    ]
                }
            }
        },
        {
            "name": "Excessively long line of code",
            "description": "Detects too long lines of un-commented code",
            "rules": {
                "max_line_len": {
                    "formal_name": "Maximum length of a line in characters",
                    "type": "range",
                    "value": [
                        120,
                        150
                    ],
                    "valid": [
                        40,
                        200
                    ]
                }
            }
        },
        {
            "name": "Naming conventions",
            "description": "Detects identifiers that do not follow naming conventions",
            "rules": {
                "class_names": {
                    "formal_name": "Class names",
                    "value": "PASCAL_CASE",
                    "type": "enum",
                    "valid": [
                        "FLAT_CASE",
                        "PASCAL_CASE",
                        "SNAKE_CASE",
                        "KEBAB_CASE",
                        "UPPERCASE",
                        "SCREAMING_SNAKE_CASE",
                        "CAMEL_SNAKE_CASE",
                        "PASCAL_SNAKE_CASE",
                        "SCREAMING_KEBAB_CASE",
                        "TRAIN_CASE",
                        "CAMEL_CASE",
                        "UNKNOWN",
                        "ANY"
                    ]
                },
                "method_names": {
                    "formal_name": "Method names",
                    "value": "CAMEL_CASE",
                    "type": "enum",
                    "valid": [
                        "FLAT_CASE",
                        "PASCAL_CASE",
                        "SNAKE_CASE",
                        "KEBAB_CASE",
                        "UPPERCASE",
                        "SCREAMING_SNAKE_CASE",
                        "CAMEL_SNAKE_CASE",
                        "PASCAL_SNAKE_CASE",
                        "SCREAMING_KEBAB_CASE",
                        "TRAIN_CASE",
                        "CAMEL_CASE",
                        "UNKNOWN",
                        "ANY"
                    ]
                },
                "var_names": {
                    "formal_name": "Variable names",
                    "value": "ANY",
                    "type": "enum",
                    "valid": [
                        "FLAT_CASE",
                        "PASCAL_CASE",
                        "SNAKE_CASE",
                        "KEBAB_CASE",
                        "UPPERCASE",
                        "SCREAMING_SNAKE_CASE",
                        "CAMEL_SNAKE_CASE",
                        "PASCAL_SNAKE_CASE",
                        "SCREAMING_KEBAB_CASE",
                        "TRAIN_CASE",
                        "CAMEL_CASE",
                        "UNKNOWN",
                        "ANY"
                    ]
                }
            }
        },
        {
            "name": "Nested scopes",
            "description": "Detects methods that nest scopes too deep",
            "rules": {
                "max_nested_scopes": {
                    "formal_name": "Maximum depth of nested blocks",
                    "type": "range",
                    "value": [
                        3,
                        7
                    ],
                    "valid": [
                        2,
                        12
                    ]
                }
            }
        },
        {
            "name": "Circular dependency",
            "description": "Detects circlular dependency between structures",
            "rules": {
                "max_circle_len": {
                    "formal_name": "Maximum circle length",
                    "type": "range",
                    "value": [
                        2,
                        6
                    ],
                    "valid": [
                        1,
                        20
                    ]
                }
            }
        },
        {
            "name": "Large Class",
            "description": "Detects structures with too many methods or fields",
            "rules": {
                "max_methods": {
                    "formal_name": "Maximum count of methods",
                    "type": "range",
                    "value": [
                        8,
                        29
                    ],
                    "valid": [
                        2,
                        40
                    ]
                },
                "max_fields": {
                    "formal_name": "Maximum count of fields",
                    "type": "range",
                    "value": [
                        6,
                        17
                    ],
                    "valid": [
                        2,
                        40
                    ]
                },
                "public_only": {
                    "formal_name": "Public only",
                    "value": true,
                    "type": "boolean"
                }
            }
        },
        {
            "name": "Large Line Width",
            "description": "Detects lines with too many characters",
            "rules": {
                "max_src_lines": {
                    "formal_name": "Maximum source line width",
                    "type": "range",
                    "value": [
                        619,
                        1200
                    ],
                    "valid": [
                        200,
                        1200
                    ]
                },
                "max_header_lines": {
                    "formal_name": "Maximum header line width",
                    "type": "range",
                    "value": [
                        200,
                        550
                    ],
                    "valid": [
                        100,
                        800
                    ]
                }
            }
        },
        {
            "name": "Inappropriate Intimacy",
            "description": "Max count of member expr from one class to any other class.",
            "rules": {
                "max_member_expr": {
                    "formal_name": "Maximum member expressions",
                    "type": "range",
                    "value": [
                        50,
                        120
                    ],
                    "valid": [
                        20,
                        200
                    ]
                }
            }
        },
        {
            "name": "Non virtual base destructor",
            "description": "Flags destructors of base classes that are not virtual.",
            "rules": {}
        },
        {
            "name": "Redundant protected access",
            "description": "Detects protected member functions or variables declared in classes that are not inherited from.",
            "rules": {
                "max_unneeded_protected": {
                    "formal_name": "Maximum unnecessary protected",
                    "type": "range",
                    "value": [
                        1,
                        5
                    ],
                    "valid": [
                        1,
                        20
                    ]
                }
            }
        },
        {
            "name": "Excessive function overloading",
            "description": "Detects functions that are overloaded too many times.",
            "rules": {
                "max_overload": {
                    "formal_name": "Maximum overloads of a function",
                    "type": "range",
                    "value": [
                        8,
                        14
                    ],
                    "valid": [
                        2,
                        20
                    ]
                }
            }
        },
        {
            "name": "Many dependencies",
            "description": "Detects structures that directly depend upon too many other structures. Indirect dependencies are not counted.",
            "rules": {
                "max_direct_dependencies": {
                    "formal_name": "Maximum direct dependencies",
                    "type": "range",
                    "value": [
                        8,
                        16
                    ],
                    "valid": [
                        4,
                        40
                    ]
                }
            }
        }
    ]
}
